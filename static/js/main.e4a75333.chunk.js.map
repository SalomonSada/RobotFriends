{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","redux/actions.js","redux/constant.js","redux/reducer.js","index.js"],"names":["Card","name","id","email","className","alt","src","CardList","robots","map","user","i","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","connect","state","searchField","isPending","error","dispatch","onSearchChange","event","payload","target","value","onRequestRobots","fetch","then","response","json","users","catch","err","useEffect","filteredRobot","filter","robot","toLowerCase","includes","InitalStateSearch","store","createStore","action","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"6OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACxB,OACE,yBAAKC,UAAU,sDACb,yBAAKC,IAAI,QAAQC,IAAG,+BAA0BJ,EAA1B,mBACpB,6BACE,4BAAKD,GACL,2BAAIE,MCYGI,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OACE,yBAAKJ,UAAU,MACZI,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,kBAAC,EAAD,CACEC,IAAKJ,EAAOG,GAAGT,GACfD,KAAMO,EAAOG,GAAGV,KAChBE,MAAOK,EAAOG,GAAGR,MACjBD,GAAIM,EAAOG,GAAGT,UCGXW,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,6BACE,2BACEV,UAAU,qDACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCMHI,EAbA,SAACC,GACd,OACE,yBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,UAGTH,EAAMI,WCmCEC,eAPS,SAACC,GAAD,MAAY,CAClCC,YAAaD,EAAMC,YACnBlB,OAAQiB,EAAMjB,OACdmB,UAAWF,EAAME,UACjBC,MAAOH,EAAMG,UAXY,SAACC,GAC1B,MAAO,CACLC,eAAgB,SAACC,GAAD,OAAWF,EC1BtB,CACLd,KCR+B,sBDS/BiB,QDwBmDD,EAAME,OAAOC,SAChEC,gBAAiB,kBAAMN,GCrBM,SAACA,GAChCO,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OACJX,EAAS,CACPd,KCjB8B,yBDkB9BiB,QAASQ,OAGZC,OAAM,SAACC,GAAD,OACLb,EAAS,CACPd,KCtB6B,wBDuB7BiB,QAASU,cDoBFlB,EAtCH,SAACL,GACXwB,qBAAU,WACRxB,EAAMgB,oBACL,CAAChB,EAAMgB,gBAAiBhB,IAHN,IAKbW,EAAmDX,EAAnDW,eAAgBJ,EAAmCP,EAAnCO,YAAalB,EAAsBW,EAAtBX,OAAQmB,EAAcR,EAAdQ,UAEvCiB,EAAgBpC,EAAOqC,QAAO,SAACC,GACnC,OAAOA,EAAM7C,KAAK8C,cAAcC,SAAStB,EAAYqB,kBAGvD,OAAOpB,EACL,wBAAIvB,UAAU,SAAd,cAEA,yBAAKA,UAAU,MACb,wBAAIA,UAAU,MAAd,eACA,kBAAC,EAAD,CAAWU,aAAcgB,IACzB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUtB,OAAQoC,S,OGnBpBK,EAAoB,CACxBvB,YAAa,GACbC,WAAW,EACXnB,OAAQ,GACRoB,MAAO,ICCHsB,G,YAAQC,uBDEc,WAAwC,IAAvC1B,EAAsC,uDAA9BwB,EAAmBG,EAAW,uCACzDrC,EAAkBqC,EAAlBrC,KAAMiB,EAAYoB,EAAZpB,QACd,OAAQjB,GACN,IDhB+B,sBCiB7B,OAAO,2BAAKU,GAAZ,IAAmBC,YAAaM,IAClC,IDjBkC,yBCkBhC,OAAO,2BACFP,GADL,IAEEjB,OAAQwB,EACRL,WAAW,IAEf,IDtBiC,wBCuB/B,OAAO,2BACFF,GADL,IAEEG,MAAOI,EACPL,WAAW,IAEf,QACE,OAAOF,KClBX4B,8BAAoBC,0BAAgBC,QAGtCC,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,GACf,kBAAC,EAAD,OAEFQ,SAASC,eAAe,W","file":"static/js/main.e4a75333.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = ({ name, id, email }) => {\r\n  return (\r\n    <div className=\"tc bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img alt=\"robot\" src={`https://robohash.org/${id}?size=200x200`} />\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <div className=\"tc\">\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n            id={robots[i].id}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        className=\"tc bg-light-gray dib br3 pa3 ma2 grow bw2 shadow-5\"\r\n        type=\"search\"\r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        height: \"464px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport { setSearchField, requestBots } from '../redux/actions';\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    props.onRequestRobots();\r\n  }, [props.onRequestRobots, props]);\r\n\r\n  const { onSearchChange, searchField, robots, isPending } = props;\r\n\r\n  const filteredRobot = robots.filter((robot) => {\r\n    return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n  });\r\n\r\n  return isPending ? (\r\n    <h1 className=\"f2 tc\">loading...</h1>\r\n  ) : (\r\n    <div className=\"tc\">\r\n      <h1 className=\"f1\">Robofriends</h1>\r\n      <SearchBox searchChange={onSearchChange} />\r\n      <Scroll>\r\n        <CardList robots={filteredRobot} />\r\n      </Scroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\r\n    onRequestRobots: () => dispatch(requestBots()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  searchField: state.searchField,\r\n  robots: state.robots,\r\n  isPending: state.isPending,\r\n  error: state.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_FAILED,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n} from './constant';\r\n\r\nexport const setSearchField = (text) => {\r\n  return {\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text,\r\n  };\r\n};\r\n\r\nexport const requestBots = () => (dispatch) => {\r\n  fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then((response) => response.json())\r\n    .then((users) =>\r\n      dispatch({\r\n        type: REQUEST_ROBOTS_SUCCESS,\r\n        payload: users,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: REQUEST_ROBOTS_FAILED,\r\n        payload: err,\r\n      })\r\n    );\r\n};\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAILED = 'REQUEST_ROBOTS_FAILED';\r\n","import {\r\n  CHANGE_SEARCH_FIELD,\r\n  REQUEST_ROBOTS_FAILED,\r\n  REQUEST_ROBOTS_SUCCESS,\r\n} from './constant';\r\n\r\nconst InitalStateSearch = {\r\n  searchField: '',\r\n  isPending: false,\r\n  robots: [],\r\n  error: '',\r\n};\r\n\r\nexport const searchRobots = (state = InitalStateSearch, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case CHANGE_SEARCH_FIELD:\r\n      return { ...state, searchField: payload };\r\n    case REQUEST_ROBOTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        robots: payload,\r\n        isPending: false,\r\n      };\r\n    case REQUEST_ROBOTS_FAILED:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n        isPending: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport App from './containers/App';\nimport { searchRobots } from './redux/reducer';\nimport 'tachyons';\nimport './containers/App.css';\n\nconst store = createStore(\n  searchRobots,\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}